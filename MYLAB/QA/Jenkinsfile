pipeline {
    agent any
    
    stages {
        stage('Check File Changes') {
            steps {
                script {
                    // Call the function and store the result
                    def directoryHasChanges = checkFileChanges('MYLAB/QA/')
                    
                    // Check if the directory has changes
                    if (directoryHasChanges) {
                        echo "Directory 'MYLAB/QA/' has changes. Proceeding to the next stage."
                    } else {
                        echo "Directory 'MYLAB/QA/' has no changes. Skipping the next stage."
                        // Skip the next stage
                        currentBuild.result = 'SUCCESS'
                        return
                    }
                }
            }
        }
        
        stage('Your Next Stage') {
            when {
                expression { checkFileChanges('MYLAB/QA/') }
            }
            steps {
                sh 'uptime'
            }
        }
        stage('2nd Stage') {
            when {
                expression { checkFileChanges('MYLAB/QA/') }
            }
            steps {
                sh 'uname -a'
            }
        }
        stage('3rd Stage') {
            when {
                expression { checkFileChanges('MYLAB/QA/') }
            }
            steps {
                sh 'free -m'
            }
        }
    }
}

def checkFileChanges(directory) {
    // Run git diff command and capture the output
    def diffOutput = sh(script: "git diff --name-only HEAD HEAD~1", returnStdout: true).trim()
    
    // Check if the provided directory is in the output
    return diffOutput.contains(directory)
}
